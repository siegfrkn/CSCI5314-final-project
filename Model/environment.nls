;; TODO
;; solve edge case where last one standing doesnt die of hunger (I think I've fixed this, but may need additional tuning) - Katrina
;; put barriers in specific locations - see Ant model - work with set up food and grass to make sure there is no overlap
;; implement set-up-farms: put food in specific locations - see Ant model - work with set up grass to make sure there is no overlap
;; regrow grass? is this representative of real life?

;;; PATCH PROPERTIES

patches-own[ ;; properties of an area
  grass ;; 0, 1, or 2 - 0 is fit for a burrow, 1 is food, 2 is a mutable visual barrier / repellent
  food ;; 0, 1, or 2 - 0 is bare ground, 1 is grass, 2 is a garden / farm
  colony ;; does this patch contain a burrow
  barrier ;; does this patch contain an immutable visual barrier
  fence ;; 0, 1, or 2 0 is no fence, 1 is a fence that can be seen through and burrowed under, 2 is an electric fence that can be seen through but not passed
]

;;; SETUP METHODS

to set-up-grass
  ask patches[ ;; establish grass

    set grass 0 ;; initialize
    set food 0
    set pcolor brown

    if random 100 < initial-grass-density [
      set grass (random 1) + 1 ;; if there is grass, it is either tall or short
      if grass = 1 [
        set pcolor green
        set food 1
      ]
      if grass = 2 [
        set pcolor yellow
        set food 2
      ]
    ]
    if pcolor = brown [ ;; bare dirt has no food val
      set food 0]
  ]
end

to set-up-barriers
  ask n-of human-development patches[
    let rand-x random-pxcor
    let rand-y random-pycor
    let farm-x random 25
    let farm-y random 25
    ask patches with [pxcor <= rand-x + farm-x and pxcor > rand-x and pycor >= rand-y and pycor < rand-y + farm-y]
    [ set pcolor black 
      set grass 0
      set food 0]
  ]
end

to set-up-farms
  ask n-of number-of-farms patches[
    let rand-x random-pxcor
    let rand-y random-pycor
    let farm-x random 25
    let farm-y random 25
    ask patches with [pxcor <= rand-x + farm-x and pxcor > rand-x and pycor >= rand-y and pycor < rand-y + farm-y]
    [ set pcolor yellow 
      set grass 2
      set food 2]
  ]
end
